Cub3Dのマップ読み込みのアルゴリズム

再帰で実装する

最初にGNLを使ってマップの行数と列数を数える
行はカウンタを使えばいける
列はGNL1周目に改行までの文字列の長さをはかり、最大値を更新すれば測れる
このとき、プレイヤーの位置も記録しておく

行数と最大の列数がわかったら、
最大列+2 * 行数+2 分のmap二次元配列を確保する

最初の行は全てスペース
各行の頭（インデックス0）は必ずスペースで埋める
各行の最後もスペースが少なくとも1つは入る
最後の行は全てスペース

GNLで各行を読み込み、joinしつつ、末尾の方は適宜スペースで埋め、各行を作っていく

これでスペースに囲まれた長方形のマップを作ることができた
(この作った配列に対して検索をかけてプレイヤーの位置を探す方がいいかもしれない)

長方形のマップをもう１つコピーする。
あとは、4分岐の再帰関数で、プレイヤーの位置から探索木を伸ばしていく。
このとき、0,2はx文字で塗りつぶしていき、これを繰り返す。
1かスペースに当たったら探索終了、スペースかその他の不正な文字に当たったらマップは不正なので不正であることを知らせる。

スペースに当たらずにすべての関数が終了したら、最初に作ったマップを他の関数に渡す。